{"ast":null,"code":"var _jsxFileName = \"/home/ryannishikawa/CPSC362proj/website/src/components/Time.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//****************************************************************************************************************************\n//Program name: \"Time.jsx\".  This program is to display time. Copyright (C)  *\n//2024 Ryan Nishikawa                                                                                                        *\n//This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *\n//version 3 as published by the Free Software Foundation.                                                                    *\n//This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied         *\n//warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *\n//A copy of the GNU General Public License v3 is available here:  <https://www.gnu.org/licenses/>.                           *\n//****************************************************************************************************************************\n\n//=======1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**\n//\n//Author information\n//  Author names: Ryan Nishikawa,\n//  Author emails: ryannishikawa48@csu.fullerton.edu,\n//  Course ID: CPSC362\n//\n//Program information\n//  Program name: Task manager\n//  Date of last update: March 28, 2024\n//  Programming language(s): JavaScript, HTML, CSS\n//  Files in this program: App.js, login.js, register.js, home.js, etc...\n//\n//  OS of the computer where the program was developed: Windows running WSL with Ubuntu 22.04.3 LTS\n//  OS of the computer where the program was tested: Windows running WSL Ubuntu 22.04.3 LTS\n//  Status: WIP\n//\n//References for this program\n//  https://www.youtube.com/watch?v=psU13XU1gDY&list=LL&index=3&t=796s&ab_channel=CodeWithViju\n//  https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\n//\n//Purpose\n//  to display/get time\n//\n//This file\n//   File name: Time.jsx\n//   Date of last update: February 22, 2024\n//   Languages: JavaScript, HTML\n//\n//References for this file\n//   https://medium.com/create-a-clocking-in-system-on-react/create-a-react-app-displaying-the-current-date-and-time-using-hooks-21d946971556\n//   https://www.w3schools.com/jsref/jsref_getday.asp\n//   https://react-bootstrap.netlify.app/docs/components/dropdowns/\n//   https://www.npmjs.com/package/react-datepicker\n//=======1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2**\n//\n//\n//\n//\n//===== Begin code area ================================================================================================\n\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n//**********************************************************************************************************************\n//===== Begin Time area ================================================================================================\n//**********************************************************************************************************************\n\n//function that returns the current date\n// import {DateTime} from \"./Time\";\nexport const DateTime = () => {\n  _s();\n  var [date, setDate] = useState(new Date());\n  useEffect(() => {\n    var timer = setInterval(() => setDate(new Date()), 1000);\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n  return date;\n};\n\n//function that prints out the date in the format: Day, Month Date\n//                                                            Time\n// import {DateTimeFormat} from \"./Time\";\n_s(DateTime, \"wA6O/DG42+wW3R8blSfoVhukeio=\");\n_c = DateTime;\nexport const DateTimeFormat = () => {\n  var date = DateTime();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-date\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [weekday[date.getDay()], \", \", month[date.getMonth()], \" \", date.getDate(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 84\n      }, this), date.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n//**********************************************************************************************************************\n//===== End Time area ================================================================================================\n//**********************************************************************************************************************\n\n//**********************************************************************************************************************\n//===== Begin Dropdown Menu area ================================================================================================\n//**********************************************************************************************************************\n\n//function that creates a dropdown menu to select *hour* for dueDate\n// import {HoursDropdown} from \"./Time\"\n_c2 = DateTimeFormat;\nexport const HoursDropdown = ({\n  setSelectedHours\n}) => {\n  var hoursNow = DateTime().getHours();\n  var hoursNowReal = hoursNow + 1 > 12 ? hoursNow - 11 : hoursNow + 1;\n  const handleHoursChange = e => {\n    setSelectedHours(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"dropdown-button\",\n    title: \"Hour\",\n    onChange: handleHoursChange,\n    defaultValue: hoursNowReal,\n    children: [...Array(12)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index + 1,\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n//function that creates a dropdown menu to select *minutes* for dueDate\n// import {MinsDropdown} from \"./Time\"\n_c3 = HoursDropdown;\nexport const MinsDropdown = ({\n  setSelectedMins\n}) => {\n  const handleMinsChange = e => {\n    setSelectedMins(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"dropdown-button\",\n    title: \"Mins\",\n    onChange: handleMinsChange,\n    children: [[...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: [\"0\", index]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)), [...Array(50)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index + 10,\n      children: index + 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n//function that creates a dropdown menu to select *AM/PM* for dueDate\n// import {AMPMDropdown} from \"./Time\"\n_c4 = MinsDropdown;\nexport const AMPMdropdown = ({\n  setSelectedAMPM\n}) => {\n  var AMorPM = DateTime().getHours() >= 12 ? \"PM\" : \"AM\";\n  const handleAMPMChange = e => {\n    setSelectedAMPM(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"dropdown-button\",\n    title: \"AMPM\",\n    onChange: handleAMPMChange,\n    defaultValue: AMorPM,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"AM\",\n      children: \"AM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"PM\",\n      children: \"PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n//function that creates a dropdown menu to select *month* for dueDate\n// import {MonthDropdown} from \"./Time\"\n_c5 = AMPMdropdown;\nexport const MonthDropdown = ({\n  setSelectedMonth\n}) => {\n  var month12 = DateTime().getMonth();\n  const handleMonthChange = e => {\n    setSelectedMonth(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"month-dropdown-button\",\n    title: \"Month\",\n    onChange: handleMonthChange,\n    defaultValue: month[month12],\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), [...Array(12)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: month[index],\n      children: month[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n\n//function that gets month from MonthDropdown to create a dropdown menu to select *date* for dueDate\n// import {DateDropdown} from \"./Time\"\n_c6 = MonthDropdown;\nexport const DateDropdown = ({\n  selectedMonth,\n  selectedYear,\n  setSelectedDate\n}) => {\n  var date = DateTime().getDate();\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const getDaysInMonth = () => {\n    switch (selectedMonth) {\n      case \"April\":\n      case \"June\":\n      case \"September\":\n      case \"November\":\n        return 30;\n      case \"February\":\n        return selectedYear % 4 === 0 && selectedYear % 100 !== 0 || selectedYear % 400 === 0 ? 29 : 28;\n      default:\n        return 31;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"dropdown-button\",\n    title: \"Day\",\n    onChange: handleDateChange,\n    defaultValue: date,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), [...Array(getDaysInMonth())].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index + 1,\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n\n//function that creates a dropdown menu to select *year* for dueDate\n// import {YearDropdown} from \"./Time\"\n_c7 = DateDropdown;\nexport const YearDropdown = ({\n  setSelectedYear\n}) => {\n  var thisYear = DateTime().getFullYear();\n  const handleYearChange = e => {\n    setSelectedYear(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"dropdown-button\",\n    title: \"Year\",\n    onChange: handleYearChange,\n    defaultValue: thisYear,\n    children: [...Array(25)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index + thisYear - 12,\n      children: index + thisYear - 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n//*******\n//funtion to return the selected dueDate\n// import {getSelctedDueDate} from \"./Time\"\n_c8 = YearDropdown;\nexport const getSelctedDueTime = ({\n  selectedHours,\n  selectedMins,\n  selectedAMPM\n}) => {\n  if (selectedAMPM === \"PM\") {\n    selectedHours += 12;\n  }\n  var dueDate = new Date(selectedHours, selectedMins);\n  return dueDate;\n};\n//**********************************************************************************************************************\n//===== End Dropdown Menu area ================================================================================================\n//**********************************************************************************************************************\n\n//datepicker function\n// import {Example} from \"./Time\"\nexport const Example = ({\n  setStartDate\n}, initialDate) => {\n  _s2();\n  const [startDate, setInternalStartDate] = useState(new Date());\n  const handleDateChange = date => {\n    setInternalStartDate(date);\n    setStartDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    defaultValue: initialDate,\n    selected: startDate,\n    onChange: handleDateChange,\n    dateFormat: \"MMMM d, yyyy\",\n    showMonthDropdown: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 7\n  }, this);\n};\n\n//function to set the status of a task\n_s2(Example, \"1tsPc8O+k97j12E8cr6f+sXOrhc=\");\n_c9 = Example;\nexport const showStatus = (dueDate, hour, minute, complete) => {\n  if (!complete) {\n    if (dueDate > DateTime().getDate()) {\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          color: 'red',\n          font: '200% / 0 sans-serif'\n        },\n        children: \"LATE!!!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [\"          in \", dueDate - DateTime()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"done\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 13\n  }, this);\n};\nexport default DateTime;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"DateTime\");\n$RefreshReg$(_c2, \"DateTimeFormat\");\n$RefreshReg$(_c3, \"HoursDropdown\");\n$RefreshReg$(_c4, \"MinsDropdown\");\n$RefreshReg$(_c5, \"AMPMdropdown\");\n$RefreshReg$(_c6, \"MonthDropdown\");\n$RefreshReg$(_c7, \"DateDropdown\");\n$RefreshReg$(_c8, \"YearDropdown\");\n$RefreshReg$(_c9, \"Example\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","month","weekday","DateTime","_s","date","setDate","Date","timer","setInterval","cleanup","clearInterval","_c","DateTimeFormat","className","children","getDay","getMonth","getDate","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c2","HoursDropdown","setSelectedHours","hoursNow","getHours","hoursNowReal","handleHoursChange","e","target","value","id","title","onChange","defaultValue","Array","map","_","index","_c3","MinsDropdown","setSelectedMins","handleMinsChange","_c4","AMPMdropdown","setSelectedAMPM","AMorPM","handleAMPMChange","_c5","MonthDropdown","setSelectedMonth","month12","handleMonthChange","_c6","DateDropdown","selectedMonth","selectedYear","setSelectedDate","handleDateChange","getDaysInMonth","_c7","YearDropdown","setSelectedYear","thisYear","getFullYear","handleYearChange","_c8","getSelctedDueTime","selectedHours","selectedMins","selectedAMPM","dueDate","Example","setStartDate","initialDate","_s2","startDate","setInternalStartDate","selected","dateFormat","showMonthDropdown","_c9","showStatus","hour","minute","complete","style","color","font","$RefreshReg$"],"sources":["/home/ryannishikawa/CPSC362proj/website/src/components/Time.jsx"],"sourcesContent":["//****************************************************************************************************************************\n//Program name: \"Time.jsx\".  This program is to display time. Copyright (C)  *\n//2024 Ryan Nishikawa                                                                                                        *\n//This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *\n//version 3 as published by the Free Software Foundation.                                                                    *\n//This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied         *\n//warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *\n//A copy of the GNU General Public License v3 is available here:  <https://www.gnu.org/licenses/>.                           *\n//****************************************************************************************************************************\n\n\n//=======1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**\n//\n//Author information\n//  Author names: Ryan Nishikawa,\n//  Author emails: ryannishikawa48@csu.fullerton.edu,\n//  Course ID: CPSC362\n//\n//Program information\n//  Program name: Task manager\n//  Date of last update: March 28, 2024\n//  Programming language(s): JavaScript, HTML, CSS\n//  Files in this program: App.js, login.js, register.js, home.js, etc...\n//\n//  OS of the computer where the program was developed: Windows running WSL with Ubuntu 22.04.3 LTS\n//  OS of the computer where the program was tested: Windows running WSL Ubuntu 22.04.3 LTS\n//  Status: WIP\n//\n//References for this program\n//  https://www.youtube.com/watch?v=psU13XU1gDY&list=LL&index=3&t=796s&ab_channel=CodeWithViju\n//  https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\n//\n//Purpose\n//  to display/get time\n//\n//This file\n//   File name: Time.jsx\n//   Date of last update: February 22, 2024\n//   Languages: JavaScript, HTML\n//\n//References for this file\n//   https://medium.com/create-a-clocking-in-system-on-react/create-a-react-app-displaying-the-current-date-and-time-using-hooks-21d946971556\n//   https://www.w3schools.com/jsref/jsref_getday.asp\n//   https://react-bootstrap.netlify.app/docs/components/dropdowns/\n//   https://www.npmjs.com/package/react-datepicker\n//=======1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2**\n//\n//\n//\n//\n//===== Begin code area ================================================================================================\n\nimport React, { useState, useEffect } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\n\n//**********************************************************************************************************************\n//===== Begin Time area ================================================================================================\n//**********************************************************************************************************************\n\n//function that returns the current date\n// import {DateTime} from \"./Time\";\nexport const DateTime = () => {\n    var [date,setDate] = useState(new Date());\n\n    useEffect(() => {\n        var timer = setInterval(() => setDate(new Date()), 1000)\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    });\n\n    return date;\n}\n\n//function that prints out the date in the format: Day, Month Date\n//                                                            Time\n// import {DateTimeFormat} from \"./Time\";\nexport const DateTimeFormat = () => {\n    var date = DateTime();\n    return (\n        <div className = \"display-date\">\n            <p>{weekday[date.getDay()]}, {month[date.getMonth()]} {date.getDate()} <br></br>\n            {date.toLocaleTimeString()}</p>\n        </div>\n    );\n}\n\n//**********************************************************************************************************************\n//===== End Time area ================================================================================================\n//**********************************************************************************************************************\n\n//**********************************************************************************************************************\n//===== Begin Dropdown Menu area ================================================================================================\n//**********************************************************************************************************************\n\n//function that creates a dropdown menu to select *hour* for dueDate\n// import {HoursDropdown} from \"./Time\"\nexport const HoursDropdown = ({setSelectedHours}) => {\n    var hoursNow = DateTime().getHours();\n    var hoursNowReal = (hoursNow + 1) > 12 ? (hoursNow - 11) : (hoursNow + 1);\n\n    const handleHoursChange = (e) => {\n        setSelectedHours(e.target.value);\n    }\n\n    return (\n        <select id=\"dropdown-button\" title=\"Hour\" onChange={handleHoursChange} defaultValue={hoursNowReal}>\n          {[...Array(12)].map((_, index) => (\n            <option value={index+1}>\n              {index + 1}\n            </option>\n          ))}\n        </select>\n      );\n}\n\n//function that creates a dropdown menu to select *minutes* for dueDate\n// import {MinsDropdown} from \"./Time\"\nexport const MinsDropdown = ({setSelectedMins}) => {\n    const handleMinsChange = (e) => {\n        setSelectedMins(e.target.value);\n    }\n\n    return (\n        <select id=\"dropdown-button\" title=\"Mins\" onChange={handleMinsChange}>\n          {[...Array(10)].map((_, index) => (\n            <option value={index}>\n                0{index}\n            </option>\n          ))}\n          {[...Array(50)].map((_, index) => (\n            <option value={index+10}>\n                {index+10}\n            </option>\n          ))}\n        </select>\n      );\n}\n\n//function that creates a dropdown menu to select *AM/PM* for dueDate\n// import {AMPMDropdown} from \"./Time\"\nexport const AMPMdropdown = ({setSelectedAMPM}) => {\n    var AMorPM = DateTime().getHours() >= 12 ? \"PM\" : \"AM\";\n\n    const handleAMPMChange = (e) => {\n        setSelectedAMPM(e.target.value);\n    }\n\n    return (\n        <select id=\"dropdown-button\" title=\"AMPM\" onChange={handleAMPMChange} defaultValue={AMorPM}>\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n        </select>\n    );\n}\n\n//function that creates a dropdown menu to select *month* for dueDate\n// import {MonthDropdown} from \"./Time\"\nexport const MonthDropdown = ({setSelectedMonth}) => {\n    var month12 = DateTime().getMonth();\n\n    const handleMonthChange = (e) => {\n        setSelectedMonth(e.target.value);\n    }\n\n    return (\n        <select id=\"month-dropdown-button\" title=\"Month\" onChange={handleMonthChange} defaultValue={month[month12]}>\n            <option value=\"\">month</option>\n            {[...Array(12)].map((_, index) => (\n                <option value={month[index]}>\n                    {month[index]}\n                </option>\n            ))}\n        </select>\n    )\n}\n\n//function that gets month from MonthDropdown to create a dropdown menu to select *date* for dueDate\n// import {DateDropdown} from \"./Time\"\nexport const DateDropdown = ({selectedMonth, selectedYear, setSelectedDate}) => {\n    var date = DateTime().getDate();\n\n    const handleDateChange = (e) => {\n        setSelectedDate(e.target.value);\n    }\n\n    const getDaysInMonth = () => {\n        switch (selectedMonth) {\n            case \"April\":\n            case \"June\":\n            case \"September\":\n            case \"November\":\n                return 30;\n            case \"February\":\n                return (selectedYear % 4 === 0 && selectedYear % 100 !== 0) || selectedYear % 400 === 0 ? 29 : 28;\n            default:\n                return 31;\n        }\n    }\n\n    return (\n        <select id=\"dropdown-button\" title=\"Day\" onChange={handleDateChange} defaultValue={date}>\n            <option value=\"\">day</option>\n          {[...Array(getDaysInMonth())].map((_, index) => (\n            <option value={index+1}>\n              {index+1}\n            </option>\n          ))}\n        </select>\n    )\n}\n\n//function that creates a dropdown menu to select *year* for dueDate\n// import {YearDropdown} from \"./Time\"\nexport const YearDropdown = ({setSelectedYear}) => {\n    var thisYear = DateTime().getFullYear();\n\n    const handleYearChange = (e) => {\n        setSelectedYear(e.target.value);\n    }\n\n    return (\n        <select id=\"dropdown-button\" title=\"Year\" onChange={handleYearChange} defaultValue={thisYear}>\n          {[...Array(25)].map((_, index) => (\n            <option value={index + thisYear - 12}>\n                {index + thisYear - 12}\n            </option>\n          ))}\n        </select>\n      );\n}\n\n//*******\n//funtion to return the selected dueDate\n// import {getSelctedDueDate} from \"./Time\"\nexport const getSelctedDueTime = ({selectedHours, selectedMins, selectedAMPM}) => {\n    if (selectedAMPM === \"PM\") {\n        selectedHours += 12;\n    }\n    var dueDate = new Date(selectedHours, selectedMins);\n    \n    return dueDate;\n}\n//**********************************************************************************************************************\n//===== End Dropdown Menu area ================================================================================================\n//**********************************************************************************************************************\n\n\n//datepicker function\n// import {Example} from \"./Time\"\nexport const Example = ({ setStartDate }, initialDate) => {\n    const [startDate, setInternalStartDate] = useState(new Date());\n  \n    const handleDateChange = (date) => {\n      setInternalStartDate(date);\n      setStartDate(date);\n    };\n  \n    return (\n      <DatePicker\n        defaultValue={initialDate}\n        selected={startDate}\n        onChange={handleDateChange}\n        dateFormat=\"MMMM d, yyyy\"\n        showMonthDropdown={true}\n      />\n    );\n  };\n\n  //function to set the status of a task\n  export const showStatus = (dueDate, hour, minute, complete) => {\n    if(!complete) {\n        if(dueDate > DateTime().getDate()) {\n            return (<pre style={{color: 'red', font: '200% / 0 sans-serif'}}>LATE!!!!!</pre>);\n        } else {\n            return (<pre>          in {dueDate - DateTime()}</pre>);\n        }\n    }\n    return (<div>done</div>);\n  };\nexport default DateTime"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}