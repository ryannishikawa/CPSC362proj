{"ast":null,"code":"var _jsxFileName = \"/home/ryannishikawa/CPSC362proj/website/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { HoursDropdown, MinsDropdown, AMPMdropdown, Example, DateTime } from \"./Time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  var initialHours = DateTime().getHours() + 1 > 12 ? DateTime().getHours() - 11 : DateTime().getHours() + 1;\n  const [name, setName] = useState(\"\");\n  const [selectedDueDate, setSelectedDueDate] = useState(new Date());\n  const [selectedHours, setSelectedHours] = useState(initialHours);\n  const [selectedMins, setSelectedMins] = useState(0);\n  const [selectedAMPM, setSelectedAMPM] = useState(DateTime().getHours() >= 12 ? \"PM\" : \"AM\");\n  function handleChange(event) {\n    // Change text inside the task creation\n    setName(event.target.value);\n  }\n  function handleSubmit(event) {\n    // Creates a new task with the given text\n    event.preventDefault();\n    // Makes sure task text is not empty\n    if (name !== \"\") {\n      const dueDate = getDueDate();\n      props.addTask(name, dueDate);\n      // Clears input after adding task\n      setName(\"\");\n      setSelectedDueDate(selectedDueDate);\n      setSelectedHours(selectedHours);\n      setSelectedMins(selectedMins);\n      setSelectedAMPM(selectedAMPM);\n    }\n  }\n  function getDueDate() {\n    const selectedDateTime = new Date(selectedDueDate);\n    const hours = parseInt(selectedHours);\n    const mins = parseInt(selectedMins);\n\n    //ensure selected hours and minutes are valid integers\n    if (isNaN(hours) || isNaN(mins)) {\n      selectedDateTime.setHours(0);\n      selectedDateTime.setMinutes(0);\n    }\n\n    //adjust hours based on AM/PM selection\n    if (selectedAMPM === \"PM\") {\n      selectedDateTime.setHours(hours === 12 ? 12 : hours + 12);\n    } else {\n      selectedDateTime.setHours(hours === 12 ? 0 : hours);\n    }\n    selectedDateTime.setMinutes(mins);\n    selectedDateTime.setSeconds(0);\n    return selectedDateTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-todo-input\",\n      className: \"input input__lg\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"due-date-picker\",\n        children: \"Due Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Example, {\n        setStartDate: setSelectedDueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"due-time\",\n        children: \"Due Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HoursDropdown, {\n        setSelectedHours: setSelectedHours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), \": \", /*#__PURE__*/_jsxDEV(MinsDropdown, {\n        setSelectedMins: setSelectedMins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 62\n      }, this), \" \", /*#__PURE__*/_jsxDEV(AMPMdropdown, {\n        setSelectedAMPM: setSelectedAMPM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 113\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"v0QVq5CCUd44B/r0ZNXozfiAjwk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","HoursDropdown","MinsDropdown","AMPMdropdown","Example","DateTime","jsxDEV","_jsxDEV","Form","props","_s","initialHours","getHours","name","setName","selectedDueDate","setSelectedDueDate","Date","selectedHours","setSelectedHours","selectedMins","setSelectedMins","selectedAMPM","setSelectedAMPM","handleChange","event","target","value","handleSubmit","preventDefault","dueDate","getDueDate","addTask","selectedDateTime","hours","parseInt","mins","isNaN","setHours","setMinutes","setSeconds","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","onChange","setStartDate","_c","$RefreshReg$"],"sources":["/home/ryannishikawa/CPSC362proj/website/src/components/Form.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { HoursDropdown, MinsDropdown, AMPMdropdown, Example, DateTime} from \"./Time\";\n\n\n\nfunction Form(props) {\n\n  var initialHours = (DateTime().getHours() + 1) > 12 ? (DateTime().getHours() - 11) : (DateTime().getHours() + 1);\n\n  const [name, setName] = useState(\"\");\n  const [selectedDueDate, setSelectedDueDate] = useState(new Date());\n  const [selectedHours, setSelectedHours] = useState(initialHours);\n  const [selectedMins, setSelectedMins] = useState(0);\n  const [selectedAMPM, setSelectedAMPM] = useState(DateTime().getHours() >= 12 ? \"PM\" : \"AM\");\n\n  function handleChange(event) {\n    // Change text inside the task creation\n    setName(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    // Creates a new task with the given text\n    event.preventDefault();\n    // Makes sure task text is not empty\n    if (name !== \"\") {\n      const dueDate = getDueDate();\n      props.addTask(name, dueDate);\n      // Clears input after adding task\n      setName(\"\");\n      setSelectedDueDate(selectedDueDate);\n      setSelectedHours(selectedHours);\n      setSelectedMins(selectedMins);\n      setSelectedAMPM(selectedAMPM);\n    }\n  }\n\n  function getDueDate() {\n    const selectedDateTime = new Date(selectedDueDate);\n    const hours = parseInt(selectedHours);\n    const mins = parseInt(selectedMins);\n    \n    //ensure selected hours and minutes are valid integers\n    if (isNaN(hours) || isNaN(mins)) {\n      selectedDateTime.setHours(0);\n      selectedDateTime.setMinutes(0);\n    }\n\n    //adjust hours based on AM/PM selection\n    if (selectedAMPM === \"PM\") {\n      selectedDateTime.setHours(hours === 12 ? 12 : hours + 12);\n    } else {\n      selectedDateTime.setHours(hours === 12 ? 0 : hours);\n    }\n\n    selectedDateTime.setMinutes(mins);\n    selectedDateTime.setSeconds(0);\n    return selectedDateTime;\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n    <h2 className=\"label-wrapper\">\n      <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n        What needs to be done?\n      </label>\n    </h2>\n    <input\n      type=\"text\"\n      id=\"new-todo-input\"\n      className=\"input input__lg\"\n      name=\"text\"\n      autoComplete=\"off\"\n      value={name}\n      onChange={handleChange}\n    />\n    <div>\n      <label htmlFor=\"due-date-picker\">Due Date:</label>\n      <Example setStartDate={setSelectedDueDate} />\n    </div>\n    <div>\n      <label htmlFor=\"due-time\">Due Time:</label>\n      <HoursDropdown setSelectedHours={setSelectedHours} />: <MinsDropdown setSelectedMins={setSelectedMins} /> <AMPMdropdown setSelectedAMPM={setSelectedAMPM} />\n    </div>\n    <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n      Add\n    </button>\n  </form>\n\n  );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}