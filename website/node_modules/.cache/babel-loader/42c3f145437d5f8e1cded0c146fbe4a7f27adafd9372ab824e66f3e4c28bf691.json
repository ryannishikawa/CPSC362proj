{"ast":null,"code":"var _jsxFileName = \"/home/ryannishikawa/CPSC362proj/website/src/hooks/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * @file AuthProvider.js\n * @author Matt De Binion <mattdb@csu.fullerton.edu>\n * @description This file handles authentication of user sessions within child components in the application.\n * \n * @see {@link: https://github.com/ryannishikawa/CPSC362proj} for our project repository and the README.md file within the server\n * directory for a less stressful viewing experience.\n * \n * Resources:\n * @see {@link: https://dev.to/miracool/how-to-manage-user-authentication-with-react-js-3ic5} for inspiration for this file\n */\n\nimport { useContext, createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Wraps application with auth context.\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  // User and token states\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"userkey\") || \"\");\n  const navigate = useNavigate();\n\n  /**\n   * Allows sessions to persist upon exiting website assuming valid credentials are provided\n   * @param {string} email \n   * @param {string} pass \n   * @returns void, saves user key and user ID to the session.\n   */\n  const loginAction = async (email, pass) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/users/find', {\n        email,\n        pass\n      });\n      if (response.data.user) {\n        setUser(response.data.user.name);\n        setToken(response.data.user.user_key);\n\n        // Store the user key, user ID, and tasks that will be modified in the session\n        localStorage.setItem(\"userkey\", response.data.user.user_key);\n        localStorage.setItem(\"userid\", response.data.user.uid);\n        localStorage.setItem(\"usertasks\", []);\n        alert(`Welcome ${response.data.user.name}! Logging you in...`);\n        navigate(\"/home\");\n        return;\n      } else {\n        alert(`Incorrect email and/or password.`);\n      }\n      throw new Error(response.message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /**\n   * Removes the user, token, and associated information in the account from the session.\n   */\n  const logoutAction = () => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"userkey\");\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"usertasks\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      loginAction,\n      logoutAction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"TF6gNmDEzvjNRunM1CXlD7TdvWY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\n\n// Can be called from child components.\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useContext","createContext","useState","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","navigate","loginAction","email","pass","response","post","data","name","user_key","setItem","uid","alert","Error","message","err","console","log","logoutAction","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/ryannishikawa/CPSC362proj/website/src/hooks/AuthProvider.js"],"sourcesContent":["/**\n * @file AuthProvider.js\n * @author Matt De Binion <mattdb@csu.fullerton.edu>\n * @description This file handles authentication of user sessions within child components in the application.\n * \n * @see {@link: https://github.com/ryannishikawa/CPSC362proj} for our project repository and the README.md file within the server\n * directory for a less stressful viewing experience.\n * \n * Resources:\n * @see {@link: https://dev.to/miracool/how-to-manage-user-authentication-with-react-js-3ic5} for inspiration for this file\n */\n\nimport { useContext, createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\n// Wraps application with auth context.\nconst AuthProvider = ({children}) => {\n\n    // User and token states\n    const [user, setUser] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem(\"userkey\") || \"\");\n    const navigate = useNavigate();\n\n    /**\n     * Allows sessions to persist upon exiting website assuming valid credentials are provided\n     * @param {string} email \n     * @param {string} pass \n     * @returns void, saves user key and user ID to the session.\n     */\n    const loginAction = async (email, pass) => {\n\n        try {\n            const response = await axios.post('http://localhost:5000/api/users/find', {email, pass});\n\n            if(response.data.user) {\n                setUser(response.data.user.name);\n                setToken(response.data.user.user_key)\n\n                // Store the user key, user ID, and tasks that will be modified in the session\n                localStorage.setItem(\"userkey\", response.data.user.user_key);\n                localStorage.setItem(\"userid\", response.data.user.uid);\n                localStorage.setItem(\"usertasks\", []);\n\n                alert(`Welcome ${response.data.user.name}! Logging you in...`);\n                navigate(\"/home\");\n                return;\n            } else {\n                alert(`Incorrect email and/or password.`);\n            }\n\n            throw new Error(response.message);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    /**\n     * Removes the user, token, and associated information in the account from the session.\n     */\n    const logoutAction = () => {\n        setUser(null);\n        setToken(\"\");\n\n        localStorage.removeItem(\"userkey\");\n        localStorage.removeItem(\"userid\");\n        localStorage.removeItem(\"usertasks\");\n        navigate(\"/login\")\n    };\n\n    return <AuthContext.Provider value={{token, user, loginAction, logoutAction}}>{children}</AuthContext.Provider>;\n}\n\nexport default AuthProvider;\n\n// Can be called from child components.\nexport const useAuth = () => {\n    return useContext(AuthContext);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}