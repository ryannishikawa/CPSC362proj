{"ast":null,"code":"var _jsxFileName = \"/home/ryannishikawa/CPSC362proj/website/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport '../css/todo-list.css';\nimport Todo from \"./ToDo\";\nimport Form from './Form';\nimport FilterButton from './FilterButton';\nimport { DateTime, DateTimeFormat } from \"./Time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  // functions to be used for filtering tasks\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nfunction TaskList(props) {\n  _s();\n  const [filter, setFilter] = useState(\"All\");\n  const [tasks, setTasks] = useState(props.tasks.map(task => ({\n    ...task,\n    dueDate: new Date(task.dueDate)\n  })));\n\n  // Ensure updates to tasks are pushed to local storage\n  useEffect(() => {\n    localStorage.setItem(\"usertasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  function addTask(name, dueDate) {\n    // Create task object\n    const newTask = {\n      id: -1,\n      name,\n      dueDate,\n      completed: false,\n      status: 'added'\n    };\n    //  Add the new task to the list of tasks\n    setTasks([...tasks, newTask]);\n  }\n  function editTask(id, newName, newDueDate) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // Copy the task and update its name\n        return {\n          ...task,\n          name: newName,\n          dueDate: newDueDate,\n          status: task.status === 'added' ? 'added' : 'updated'\n        };\n      }\n      // Return the original task if it's not the edited task\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {\n          ...task,\n          completed: !task.completed,\n          status: task.status === 'added' ? 'added' : 'updated'\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function deleteTask(id) {\n    // get all tasks other than this task\n    const remainingTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          status: 'deleted'\n        };\n      }\n      return task;\n    });\n    setTasks(remainingTasks);\n  }\n  const taskList = tasks.filter(task => task.status !== 'deleted' && FILTER_MAP[filter](task)).map(task => {\n    var _task$dueDate;\n    return /*#__PURE__*/_jsxDEV(Todo, {\n      id: task.id,\n      name: task.name,\n      dueDate: (_task$dueDate = task.dueDate) === null || _task$dueDate === void 0 ? void 0 : _task$dueDate.toLocaleString(),\n      completed: task.completed,\n      status: task.status,\n      toggleTaskCompleted: toggleTaskCompleted,\n      deleteTask: deleteTask,\n      editTask: editTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  });\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(DateTimeFormat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"vmd8wrdMEr0EGyUF3fLHEfTJF9c=\");\n_c2 = TaskList;\nexport default TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["useEffect","useState","Todo","Form","FilterButton","DateTime","DateTimeFormat","jsxDEV","_jsxDEV","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","_c","TaskList","props","_s","filter","setFilter","tasks","setTasks","map","dueDate","Date","localStorage","setItem","JSON","stringify","addTask","name","newTask","id","status","editTask","newName","newDueDate","editedTaskList","toggleTaskCompleted","updatedTasks","deleteTask","remainingTasks","taskList","_task$dueDate","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","filterList","isPressed","tasksNoun","length","headingText","className","children","_c2","$RefreshReg$"],"sources":["/home/ryannishikawa/CPSC362proj/website/src/components/TaskList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport '../css/todo-list.css';\nimport Todo from \"./ToDo\";\nimport Form from './Form';\nimport FilterButton from './FilterButton';\nimport {DateTime, DateTimeFormat} from \"./Time\";\n\nconst FILTER_MAP = {\n  // functions to be used for filtering tasks\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n}\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction TaskList(props) {\n\n  const [filter, setFilter] = useState(\"All\");\n  const [tasks, setTasks] = useState(props.tasks.map(task => ({ ...task, dueDate: new Date(task.dueDate) })));\n\n  // Ensure updates to tasks are pushed to local storage\n  useEffect(() => {\n    localStorage.setItem(\"usertasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  function addTask(name, dueDate) {\n    // Create task object\n    const newTask = { id: -1, name, dueDate, completed: false, status: 'added' };\n    //  Add the new task to the list of tasks\n    setTasks([...tasks, newTask]);\n  }\n\n  function editTask(id, newName, newDueDate) {\n\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // Copy the task and update its name\n        return { ...task, name: newName, dueDate: newDueDate, status: task.status === 'added' ? 'added' : 'updated' };\n      }\n      // Return the original task if it's not the edited task\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed, status: task.status === 'added' ? 'added' : 'updated' };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    \n    // get all tasks other than this task\n    const remainingTasks = tasks.map((task) => {\n      if(id === task.id) {\n        return { ...task, status: 'deleted'};\n      }\n      return task;\n    });\n\n    setTasks(remainingTasks);\n  }\n  \n  const taskList = tasks\n    .filter(task => task.status !== 'deleted' && FILTER_MAP[filter](task))\n    .map((task) => (\n        <Todo\n            id={task.id}\n            name={task.name}\n            dueDate={task.dueDate?.toLocaleString()}\n            completed={task.completed}\n            status={task.status}\n            key={task.id}\n            toggleTaskCompleted={toggleTaskCompleted}\n            deleteTask={deleteTask}\n            editTask={editTask}\n        />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ))\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n    <DateTimeFormat />\n      <h1>Task List</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}